% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_assoc.R
\name{get_assoc}
\alias{get_assoc}
\title{Get tidy model output of exposure(s) on outcome(s)}
\usage{
get_assoc(
  d,
  x,
  y,
  z = "",
  model = "lm",
  af = FALSE,
  af_base = FALSE,
  note = "",
  get_fit = FALSE,
  extreme_ps = FALSE,
  scale_x = FALSE,
  scale_y = FALSE,
  inv_norm_x = FALSE,
  inv_norm_y = FALSE,
  winsorize_x = FALSE,
  winsorize_y = FALSE,
  winsorize_n = 5,
  return_all_terms = FALSE,
  interacts_with = "",
  progress = TRUE,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{d}{A \code{data.frame} or \code{tibble}. The data.}

\item{x}{A string or vector of strings. The exposure variable name(s), found in `d`. (character)}

\item{y}{A string. The outcome variable name, found in `d` -- if model is 'coxph' then paste the survival object here e.g., 'Surv(time, event)' where `time` and `event` are variables in `d`. (character)}

\item{z}{A string. The covariate formula (e.g., " + age + sex"), found in `d`. Default is no covariates. 
\code{default=""} (character)}

\item{model}{A string. The type of model to perform. Can be "lm", "logistic" or "coxph".
\code{default="lm"} (character)}

\item{af}{Logical. Is `x` categorical? I.e., include in formula like `haven::as_factor(x)`.
To use base R `as.factor()` instead set option "af_base" to TRUE
\code{default=FALSE}}

\item{af_base}{Logical. Use base R `as.factor()` instead of `haven::as_factor(x)`?
\code{default=FALSE}}

\item{note}{A string. If you want to include a note like "All", "Males", "C282Y homozygotes" to describe the model or sample.
\code{default=""} (character)}

\item{get_fit}{Logical. Default is FALSE. Get model fit? (for each model: lm=R2, logistic=McFadden's pseudo-R2, coxph=Harrell's c-statistic).
\code{default=FALSE}}

\item{extreme_ps}{Logical. Default is FALSE. If p==0 then return "extreme p-values" as strings.
\code{default=FALSE}}

\item{scale_x}{Logical. Default is FALSE. Apply scale() function to exposure?
\code{default=FALSE}}

\item{scale_y}{Logical. Default is FALSE. Apply scale() function to outcome?
\code{default=FALSE}}

\item{inv_norm_x}{Logical. Apply inv_norm() function to exposure?
\code{default=FALSE}}

\item{inv_norm_y}{Logical. Apply inv_norm() function to outcome?
\code{default=FALSE}}

\item{winsorize_x}{Logical. Apply Winzorization to exposure?
\code{default=FALSE}}

\item{winsorize_y}{Logical. Apply Winzorization to outcome?
\code{default=FALSE}}

\item{winsorize_n}{Numeric. Standard deviations from the mean to Winzorize. I.e., participants with values beyond this N will be set to N.
\code{default=5}}

\item{return_all_terms}{Logical. Return estimates for all independent variables (terms) in the model? If TRUE, includes an adddition column 'term'
\code{default=FALSE}}

\item{interacts_with}{A string. A variable found in `d`. Will add to regression formula like `x*i` and catch output
\code{default=""} (character)}

\item{progress}{Logical. Show progress bar from {purrr} `map()` function (useful when multiple exposures/outcomes provided).
\code{default=TRUE}}

\item{verbose}{Logical. Be verbose,
\code{default=FALSE}}

\item{...}{Other `tidy_ci()` options}
}
\value{
Returns a tibble - summary statistics from a model
}
\description{
To easily get tidy model output (from linear or logistic GLM, or CoxPH) for a categorical or continuous exposure, including sample size (and N cases if logistic), outcome, and model info. Idea is to make quick PheWAS trivially easy.

For all exposures, it gets the N. For categorical exposures, the N is split by group, and a row is included for the reference category

Can provide multiple exposures and/or outcomes
}
\examples{
# for one outcome, equivalent to `tidy_ci(glm(sbp ~ bmi +age+sex, d=example_data))` - with added `n`
get_assoc(x="bmi", y="sbp", z="+age+sex", d=example_data)

# categorical exposure, binary outcome, and stratified analysis (with note)
#  - note that data can be passed using the pipe if desired
example_data |> dplyr::filter(sex==1) |>
  get_assoc(x="bmi_cat", y="event", z="+age", model="logistic", af=TRUE, note="Males only")  |> print(width=500)

# multiple exposures and/or outcomes - get pseudo R^2
x_vars = c("bmi","sbp","dbp","scl")
y_vars = c("event","sex")
get_assoc(x=x_vars, y=y_vars, z="+age", d=example_data, model="logistic", get_fit=TRUE)  |> print(width=500)

# if desired, can also return estimates for other independent variables (terms) in the model
x_vars = c("bmi","sbp","dbp")
get_assoc(x=x_vars, y="event", z="+age+sex", d=example_data, model="logistic", return_all_terms=TRUE)  |> print(width=500)

}
\author{
Luke Pilling
}
